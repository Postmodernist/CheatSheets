# From host

docker run --privileged -dit --name android-test ubuntu

# Inside container

apt update && apt install -y openjdk-8-jdk vim git unzip libglu1 libpulse-dev libasound2 libc6  libstdc++6 libx11-6 libx11-xcb1 libxcb1 libxcomposite1 libxcursor1 libxi6  libxtst6 libnss3 wget
wget 'https://dl.google.com/android/repository/commandlinetools-linux-6609375_latest.zip' -P /tmp
mkdir -p /opt/android/cmdline-tools
unzip -d /opt/android/cmdline-tools /tmp/commandlinetools-linux-6609375_latest.zip
export PATH=/opt/android/cmdline-tools/tools/bin:$PATH
sdkmanager --list
yes Y | sdkmanager "platform-tools" "system-images;android-29;google_apis;x86" "platforms;android-29" "build-tools;29.0.3" "emulator"
yes Y | sdkmanager --licenses
echo "no" | avdmanager --verbose create avd --force --name "test-pixel" --device "pixel" --package "system-images;android-29;google_apis;x86" --tag "google_apis" --abi "x86"
avdmanager list avds
/opt/android/emulator/emulator -list-avds
vim ~/.bashrc
export ANDROID_HOME=/opt/android
export PATH=$ANDROID_HOME/emulator:$ANDROID_HOME/cmdline-tools/tools/bin:$ANDROID_HOME/platform-tools:$PATH
export LD_LIBRARY_PATH=$ANDROID_HOME/emulator/lib64:$ANDROID_HOME/emulator/lib64/qt/lib
source ~/.bashrc
vim start.sh
./start.sh
adb devices

# From project dir

docker run --privileged -it --rm -v $PWD:/data android-test:v1.2 bash -c "source /root/.bashrc && ./start.sh && /data/gradlew testAll"
